apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp/dbdata"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  labels:
    app: mongo
    env: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      name: mongo-pod
      labels:
        app: mongo
    spec:
      volumes:
    	- name: mongo-pv-storage
      	persistentVolumeClaim:
        	claimName: mongo-pv-claim
      containers:
        - name: mongodb
          image: mongo
          command: [--auth]
          volumeMounts:
            - mountPath: "/data/db"
            name: mongo-pv-storage
            - mountPath: "/docker-entrypoint-initdb.d/mongo-init.sh"
            name: user_script
          volumes:
            - name: user_script
            hostPath:
              path: user_init.sh
              type: Directory
          ports:
          - containerPort: 27017
          env:
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongodb-secret
                key: mongo-root-username
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom: 
              secretKeyRef:
                name: mongodb-secret
                key: mongo-root-password
          - name: MONGO_INITDB_DATABASE
          value: admin
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
